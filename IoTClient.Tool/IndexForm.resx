<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAD/4AAA/+AAAP/gGAA=
</value>
  </data>
</root>